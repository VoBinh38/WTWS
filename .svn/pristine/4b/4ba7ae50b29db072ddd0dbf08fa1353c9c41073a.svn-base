using CrystalDecisions.CrystalReports.Engine;
using PURCHASE.DataCenter;
using PURCHASE.MAIN.Modun4.Search;
using PURCHASE.MAINCODE.Modun4.Report;
using PURCHASE.MAINCODE.Modun4.Search;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using static PURCHASE.DataCenter.Report1;

namespace PURCHASE.MAINCODE.Modun4
{
    public partial class Form4CF7 : Form
    {
        DataProvider con = new DataProvider();
        DataTable dt;
        public Form4CF7()
        {
            InitializeComponent();
        }

        private void Form4CF7_Load(object sender, EventArgs e)
        {

        }

        private void btxemtruoc_Click(object sender, EventArgs e)
        {
            if(tabControl1.SelectedIndex ==0)
            {
                TabPage1();
            }else if(tabControl1.SelectedIndex ==1)
            {
                TabPage2();
            }else if(tabControl1.SelectedIndex == 2)
            {
                TabPage3();
            }
        }

        private void TabPage3()
        {
            string Where = "";
            string Where1 = "";
            if(txtWS_DATE_Tab3.MaskFull)
            {
                Where = Where + " AND H.WS_DATE>='" + txtWS_DATE_Tab3.Text.Replace("/", "") + "'";
                Where1 = Where1 + " AND B.WS_DATE>='" + txtWS_DATE_Tab3.Text.Replace("/", "") + "'";
            }
            if (txtWS_DATE1_Tab3.MaskFull)
            {
                Where = Where + " AND H.WS_DATE <= '" + txtWS_DATE1_Tab3.Text.Replace("/", "") + "'";
                Where1 = Where1 + " AND B.WS_DATE <= '" + txtWS_DATE1_Tab3.Text.Replace("/", "") + "'";
            }
            if (!string.IsNullOrEmpty(txtK_NO_Tab3.Text))
            {
                Where = Where + " AND C.K_NO >= '" + txtK_NO_Tab3.Text + "'";
                Where1 = Where1 + " AND G.K_NO >= '" + txtK_NO_Tab3.Text + "'";
            }
            if (!string.IsNullOrEmpty(txtK_NO1_Tab3.Text))
            {
                Where = Where + " AND C.K_NO <= '" + txtK_NO1_Tab3.Text + "'";
                Where1 = Where1 + " AND G.K_NO <= '" + txtK_NO1_Tab3.Text + "'";
            }
            if (!string.IsNullOrEmpty(txtP_NO_Tab3.Text))
            {
                Where = Where + " AND C.P_NO >= '" + txtP_NO_Tab3.Text + "'";
                Where1 = Where1 + " AND G.P_NO >= '" + txtP_NO_Tab3.Text + "'";
            }
            if (!string.IsNullOrEmpty(txtP_NO1_Tab3.Text))
            {
                Where = Where + " AND C.P_NO<= '" + txtP_NO1_Tab3.Text + "'";
                Where1 = Where1 + " AND G.P_NO<= '" + txtP_NO1_Tab3.Text + "'";
            }
            string SQL = "";
            if (rdbHangHoa.Checked == true)
            {
                SQL = "SELECT H.C_NO,H.C_ANAME,H.WS_DATE,C.WS_NO,C.P_NO,C.P_NAME," +
                " C.P_NAME1,C.P_NAME3,C.DEPT_NAME,C.BUNIT,C.BQTY,C.PRICE,C.AMOUNT,P.M_TRAN,M.M_NAME" +
                " FROM COMBC1 C, COMHC1 H, PROD1C P,(SELECT DISTINCT M_NO, M_NAME" +
                " FROM dbo.MONEYT" +
                " WHERE WS_DATE IN(SELECT MAX(WS_DATE) FROM dbo.MONEYT)) M" +
                " WHERE C.WS_NO = H.WS_NO AND P.P_NO = C.P_NO AND M.M_NO = P.M_TRAN" + Where +
                " UNION ALL" +
                " SELECT B.C_NO,B.C_ANAME,B.WS_DATE,G.WS_NO,G.P_NO,G.P_NAME," +
                " G.P_NAME1,G.P_NAME3,G.DEPT_NAME,G.BUNIT,(-1) * G.BQTY,G.PRICE,(-1) * G.AMOUNT,p.M_TRAN,M.M_NAME" +
                " FROM CGBBC G, CGBHC B,PROD1C P,(SELECT DISTINCT M_NO, M_NAME" +
                " FROM dbo.MONEYT" +
                " WHERE WS_DATE IN(SELECT MAX(WS_DATE) FROM dbo.MONEYT))M" +
                " WHERE G.WS_NO = B.WS_NO AND P.P_NO = G.P_NO AND M.M_NO = P.M_TRAN" + Where1 +
                " ORDER BY C.P_NO,H.WS_DATE";
            } else if (rdbConHang.Checked == true)
            {
                SQL = "SELECT H.C_NO,H.C_ANAME,H.WS_DATE,C.WS_NO,C.P_NO,C.P_NAME,C.P_NAME1,C.P_NAME3,C.DEPT_NAME,C.BUNIT,C.BQTY,C.PRICE,C.AMOUNT " +
                    " FROM COMBC1 C,COMHC1 H" +
                    " WHERE C.WS_NO = H.WS_NO " + Where +
                    " ORDER BY P_NO";
            }
            else
            {
                SQL = "SELECT B.C_NO,B.C_ANAME,B.WS_DATE,G.WS_NO,G.P_NO,G.P_NAME,G.P_NAME1,G.P_NAME3,G.DEPT_NAME,G.BUNIT,G.BQTY,G.PRICE,G.AMOUNT " +
                    " FROM CGBBC G,CGBHC B" +
                    " WHERE G.WS_NO = B.WS_NO " + Where +
                    " ORDER BY P_NO";
            }

            dt = new DataTable();
            dt = con.readdata(SQL);
            ReportDocument cryRpt = new ReportDocument();
            cryRpt = new cr_Frm4CF7_Tab3();
            cryRpt.SetDataSource(dt);

            var SumEUR = dt.AsEnumerable().Where(row => row.Field<string>("M_TRAN") == "ERU").Select(x => new { Amount = x.Field<double>("AMOUNT") }).Sum(x => x.Amount);
            var SumNTD = dt.AsEnumerable().Where(row => row.Field<string>("M_TRAN") == "NTD").Select(x => new { Amount = x.Field<double>("AMOUNT") }).Sum(x => x.Amount);
            var SumUSD = dt.AsEnumerable().Where(row => row.Field<string>("M_TRAN") == "USD").Select(x => new { Amount = x.Field<double>("AMOUNT") }).Sum(x => x.Amount);
            var SumHKD = dt.AsEnumerable().Where(row => row.Field<string>("M_TRAN") == "HKD").Select(x => new { Amount = x.Field<double>("AMOUNT") }).Sum(x => x.Amount);
            var SumRMB = dt.AsEnumerable().Where(row => row.Field<string>("M_TRAN") == "RMB").Select(x => new { Amount = x.Field<double>("AMOUNT") }).Sum(x => x.Amount);
            var SumVND = dt.AsEnumerable().Where(row => row.Field<string>("M_TRAN") == "VND").Select(x => new { Amount = x.Field<double>("AMOUNT") }).Sum(x => x.Amount);
            cryRpt.DataDefinition.FormulaFields["SumEUR"].Text = SumEUR.ToString();
            cryRpt.DataDefinition.FormulaFields["SumNTD"].Text = SumNTD.ToString();
            cryRpt.DataDefinition.FormulaFields["SumUSD"].Text = SumUSD.ToString();
            cryRpt.DataDefinition.FormulaFields["SumHKD"].Text = SumHKD.ToString();
            cryRpt.DataDefinition.FormulaFields["SumRMB"].Text = SumRMB.ToString();
            cryRpt.DataDefinition.FormulaFields["SumVND"].Text = SumVND.ToString();
            ShareReport.repo = cryRpt;
            Report1 frm = new Report1();
            frm.ShowDialog();
        }

        private void TabPage2()
        {
            string sql = "SELECT * FROM COMBC1,COMHC1,VENDC " +
                " WHERE COMHC1.WS_NO = COMBC1.WS_NO AND COMHC1.C_NO = VENDC.C_NO";

            if(string.IsNullOrEmpty(txtWS_NO_Tab2.Text))
            {
                sql = sql + " AND COMHC1.WS_NO>='"+txtWS_NO_Tab2.Text+"'";
            }

            if(string.IsNullOrEmpty(txtWS_NO1_Tab2.Text))
            {
                sql = sql + " AND COMHC1.WS_NO<='"+txtWS_NO1_Tab2.Text+"'";
            }

            if(txtWS_DATE_Tab2.MaskFull)
            {
                sql = sql + " AND COMHC1.WS_DATE>='"+txtWS_DATE_Tab2.Text.Replace("/","")+"'";
            }
            if (txtWS_DATE1_Tab2.MaskFull)
            {
                sql = sql + " AND COMHC1.WS_DATE<='" + txtWS_DATE1_Tab2.Text.Replace("/", "") + "'";
            }

            if(string.IsNullOrEmpty(txtC_NO_Tab2.Text))
            {
                sql = sql + " AND COMHC1.C_NO>='"+txtC_NO_Tab2.Text+"' ";
            }
            if (string.IsNullOrEmpty(txtC_NO1_Tab2.Text))
            {
                sql = sql + " AND COMHC1.C_NO<='" + txtC_NO1_Tab2.Text + "' ";
            }

            if (rdbC_NO_Tab2.Checked == true)
            {
                sql = sql + " ORDER BY COMHC1.C_NO,COMHC1.WS_DATE,COMHC1.WS_NO";
            } 
            else if (rdbWS_DATE_Tab2.Checked == true)
            {
                sql = sql + " ORDER BY COMHC1.WS_DATE,COMHC1.WS_NO";
            }
            else
            {
                sql = sql + " ORDER BY COMHC1.WS_NO,COMHC1.WS_DATE";
            }

            dt = new DataTable();
            dt = con.readdata(sql);

            ReportDocument cryRpt = new ReportDocument();
            cryRpt = new cr_Frm4CF7_Tab2();
            cryRpt.SetDataSource(dt);
            ShareReport.repo = cryRpt;
            Report1 frm = new Report1();
            frm.ShowDialog();
        }

        public void TabPage1()
        {
            string sql = "SELECT * FROM COMHC1,VENDC,COMBC1" +
                " WHERE COMHC1.C_NO = VENDC.C_NO AND COMBC1.WS_NO = COMHC1.WS_NO" +
                " AND COMHC1.WS_NO >= '"+txtWS_NO.Text+"' AND COMHC1.WS_NO <= '"+txtWS_NO1.Text+"'" +
                " ORDER BY COMHC1.WS_NO";
            dt = new DataTable();
            dt = con.readdata(sql);

            ReportDocument cryRpt = new ReportDocument();
            cryRpt = new cr_Frm4CF7_Tab1();
            cryRpt.SetDataSource(dt);
            ShareReport.repo = cryRpt;
            Report1 frm = new Report1();
            frm.ShowDialog();
        }

        private void txtWS_NO_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            FormSearchCOMHC1 frm = new FormSearchCOMHC1();
            frm.ShowDialog();
            txtWS_NO.Text = FormSearchCOMHC1.GetItem.WS_NO;
        }

        private void txtWS_NO1_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            FormSearchCOMHC1 frm = new FormSearchCOMHC1();
            frm.ShowDialog();
            txtWS_NO1.Text = FormSearchCOMHC1.GetItem.WS_NO;
        }

        private void txtWS_DATE_Tab3_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            LibraryCalender.FromCalender frm = new LibraryCalender.FromCalender();
            frm.ShowDialog();
            txtWS_DATE_Tab3.Text = LibraryCalender.FromCalender.getDate.ToString("yyyyMMdd");
        }

        private void txtWS_DATE1_Tab3_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            LibraryCalender.FromCalender frm = new LibraryCalender.FromCalender();
            frm.ShowDialog();
            txtWS_DATE1_Tab3.Text = LibraryCalender.FromCalender.getDate.ToString("yyyyMMdd");
        }

        private void txtWS_DATE_Tab2_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            LibraryCalender.FromCalender frm = new LibraryCalender.FromCalender();
            frm.ShowDialog();
            txtWS_DATE_Tab2.Text = LibraryCalender.FromCalender.getDate.ToString("yyyyMMdd");
        }

        private void txtWS_DATE1_Tab2_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            LibraryCalender.FromCalender frm = new LibraryCalender.FromCalender();
            frm.ShowDialog();
            txtWS_DATE1_Tab2.Text = LibraryCalender.FromCalender.getDate.ToString("yyyyMMdd");
        }

        private void txtWS_NO_Tab2_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            FormSearchCOMHC1 frm = new FormSearchCOMHC1();
            frm.ShowDialog();
            txtWS_NO_Tab2.Text = FormSearchCOMHC1.GetItem.WS_NO;
        }

        private void txtWS_NO1_Tab2_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            FormSearchCOMHC1 frm = new FormSearchCOMHC1();
            frm.ShowDialog();
            txtWS_NO1_Tab2.Text = FormSearchCOMHC1.GetItem.WS_NO;
        }

        private void textBox3_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            textBox3.Text = (textBox3.Text == "Y" ? "N" : "Y");
        }

        private void txtC_NO_Tab2_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            SearchVENDC1B frm = new SearchVENDC1B();
            frm.ShowDialog();
            txtC_NO_Tab2.Text = SearchVENDC1B.getDataTable.C_NO;
        }

        private void txtC_NO1_Tab2_MouseDoubleClick(object sender, MouseEventArgs e)
        {
            SearchVENDC1B frm = new SearchVENDC1B();
            frm.ShowDialog();
            txtC_NO1_Tab2.Text = SearchVENDC1B.getDataTable.C_NO;
        }
    }
}
